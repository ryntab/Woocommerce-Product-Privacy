<?php

/**
 * Provide a admin area view for the plugin
 *
 * This file is used to markup the admin-facing aspects of the plugin.
 *
 * @link       ryntab.com
 * @since      1.0.0
 *
 * @package    woo_product_privacy
 * @subpackage woo_product_privacy/admin/partials
 */


/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */


 die();

class WoocommerceProductPrivacy {
	private $woocommerce_product_privacy_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'woocommerce_product_privacy_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'woocommerce_product_privacy_page_init' ) );
	}

	public function woocommerce_product_privacy_add_plugin_page() {
		add_options_page(
			'Woocommerce Product Privacy', // page_title
			'Woocommerce Product Privacy', // menu_title
			'manage_options', // capability
			'woocommerce-product-privacy', // menu_slug
			array( $this, 'woocommerce_product_privacy_create_admin_page' ) // function
		);
	}

	public function woocommerce_product_privacy_create_admin_page() {
		$this->woocommerce_product_privacy_options = get_option( 'woocommerce_product_privacy_option_name' ); ?>

		<div class="wrap">
			<h2>Woocommerce Product Privacy</h2>
			<p>Bloop</p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'woocommerce_product_privacy_option_group' );
					do_settings_sections( 'woocommerce-product-privacy-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function woocommerce_product_privacy_page_init() {
		register_setting(
			'woocommerce_product_privacy_option_group', // option_group
			'woocommerce_product_privacy_option_name', // option_name
			array( $this, 'woocommerce_product_privacy_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'woocommerce_product_privacy_setting_section', // id
			'Settings', // title
			array( $this, 'woocommerce_product_privacy_section_info' ), // callback
			'woocommerce-product-privacy-admin' // page
		);

		add_settings_field(
			'reverse_mode_0', // id
			'Reverse Mode', // title
			array( $this, 'reverse_mode_0_callback' ), // callback
			'woocommerce-product-privacy-admin', // page
			'woocommerce_product_privacy_setting_section' // section
		);

		add_settings_field(
			'hide_everything_1', // id
			'Hide Everything!', // title
			array( $this, 'hide_everything_1_callback' ), // callback
			'woocommerce-product-privacy-admin', // page
			'woocommerce_product_privacy_setting_section' // section
		);

		add_settings_field(
			'allow_traffic_from_referral_urls_2', // id
			'Allow traffic from referral URLs', // title
			array( $this, 'allow_traffic_from_referral_urls_2_callback' ), // callback
			'woocommerce-product-privacy-admin', // page
			'woocommerce_product_privacy_setting_section' // section
		);
	}

	public function woocommerce_product_privacy_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['reverse_mode_0'] ) ) {
			$sanitary_values['reverse_mode_0'] = $input['reverse_mode_0'];
		}

		if ( isset( $input['hide_everything_1'] ) ) {
			$sanitary_values['hide_everything_1'] = $input['hide_everything_1'];
		}

		if ( isset( $input['allow_traffic_from_referral_urls_2'] ) ) {
			$sanitary_values['allow_traffic_from_referral_urls_2'] = esc_textarea( $input['allow_traffic_from_referral_urls_2'] );
		}

		return $sanitary_values;
	}

	public function woocommerce_product_privacy_section_info() {
		
	}

	public function reverse_mode_0_callback() {
		printf(
			'<input type="checkbox" name="woocommerce_product_privacy_option_name[reverse_mode_0]" id="reverse_mode_0" value="reverse_mode_0" %s> <label for="reverse_mode_0">Instead of selecting which products to hide, select which products to show.</label>',
			( isset( $this->woocommerce_product_privacy_options['reverse_mode_0'] ) && $this->woocommerce_product_privacy_options['reverse_mode_0'] === 'reverse_mode_0' ) ? 'checked' : ''
		);
	}

	public function hide_everything_1_callback() {
		printf(
			'<input type="checkbox" name="woocommerce_product_privacy_option_name[hide_everything_1]" id="hide_everything_1" value="hide_everything_1" %s> <label for="hide_everything_1">No products will be publicly accessible by their direct links.</label>',
			( isset( $this->woocommerce_product_privacy_options['hide_everything_1'] ) && $this->woocommerce_product_privacy_options['hide_everything_1'] === 'hide_everything_1' ) ? 'checked' : ''
		);
	}

	public function allow_traffic_from_referral_urls_2_callback() {
		printf(
			'<textarea class="large-text" rows="5" name="woocommerce_product_privacy_option_name[allow_traffic_from_referral_urls_2]" id="allow_traffic_from_referral_urls_2">%s</textarea>',
			isset( $this->woocommerce_product_privacy_options['allow_traffic_from_referral_urls_2'] ) ? esc_attr( $this->woocommerce_product_privacy_options['allow_traffic_from_referral_urls_2']) : ''
		);
	}

}
if ( is_admin() )
	$woocommerce_product_privacy = new WoocommerceProductPrivacy();

/* 
 * Retrieve this value with:
 * $woocommerce_product_privacy_options = get_option( 'woocommerce_product_privacy_option_name' ); // Array of All Options
 * $reverse_mode_0 = $woocommerce_product_privacy_options['reverse_mode_0']; // Reverse Mode
 * $hide_everything_1 = $woocommerce_product_privacy_options['hide_everything_1']; // Hide Everything!
 * $allow_traffic_from_referral_urls_2 = $woocommerce_product_privacy_options['allow_traffic_from_referral_urls_2']; // Allow traffic from referral URLs
 */
